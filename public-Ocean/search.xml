<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo博客框架的正确食用方法]]></title>
    <url>%2FHexo%2F8496.html</url>
    <content type="text"><![CDATA[本教程主要是为了记录自己搭建博客的过程，仅供参考，不保证适用于所有人。 若因本教程内容有误而导致数据丢失等情况，本人概不负责，请在修改前备份好自己的数据！！ 如转载请勿删除本段版权信息 ©RADITECH 2019 什么是Hexo？在正式开始之前，你最好先了解一下hexo博客框架 当然如果等不及了跳过也是阔以的 Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 官方网站 0.准备工作1. 一台设备（Windows/macOS/Linux/Android） ​ *如果需要在多个设备上同步并在Github/Gitee/Coding上部署博客，可以使用Cloud Studio搭建hexo博客 ​ Cloud Studio食用方法： ​ 创建一个Git仓库（参考后文步骤3，因为是存放源码所以可以另外新建一个仓库） ​ 首先需要注册腾讯云开发者平台：点击注册 ​ 选择 产品 → Cloud Studio → 进入工作空间 ​ 点击新建工作空间 ​ 如果部署在Coding上，则来源选择腾讯云开发者平台，部署在Github/Gitee上，就选择其他Git仓库，并将SSH秘钥添加到Github/Gitee的个人设置中（后文步骤2中有详细写） ​ Github/Gitee需要手动填写仓库名称，Coding直接选择即可 ​ 运行环境选择hexo，点击创建 ​ 已经集成了hexo、nodejs和git所以不必再安装了 ​ 然后就可以直接根据后文步骤初始化hexo了 ​ *如果没有将源码仓库和静态网站仓库分开，master分支用来储存源码了，要在博客配置文件中，将deploy下的branch值要改成别的，他会自动创建一个新分支，当然在使用pages服务的时候也要将部署分支改为新的分支名（你也可以将源码和静态网站放在不同的仓库中） 2. 选择在Github/Gitee/Coding/COS上部署你的博客 ​ 如果想要自定义域名的话，你需要选择一个域名注册商来注册域名（如果使用腾讯云COS部署博客，最好在腾讯云上注册域名，如果你已经有自己的域名了，可以将域名转入至腾讯云，已经备案的域名需要转入备案） ​ *自定义域名可以通过DNS解析线路设置部署到多个平台（比如解析到Github使用国外线路，解析到Coding使用国内线路） ​ 首先选择一个平台注册账号 ​ Github（推荐）：官网 ​ 优点：完全免费、支持自定义域名https访问、支持WebHook、国内访问速度还行 ​ 缺点：百度收录比较困难、私人仓库需要付费 ​ Gitee码云：官网 ​ 优点：国内访问速度快、支持自定义域名https访问、支持WebHook ​ 缺点：自定义域名及其他进阶功能需要付费、自定义域名需备案 ​ Coding（dev.tencent）：官网 ​ 优点：完全免费、支持自定义域名https访问、自带SSL证书、支持私有仓库静态网站、支持WebHook和持续集成、支持Cloud Studio搭建hexo博客（完全在线操作，不需要担心多设备同步的问题） ​ 缺点：访问速度慢（但是可以使用国内CDN加速） ​ COS腾讯云对象存储：官网 ​ 优点：访问速度非常快、有赠送的资源包和流量包（根本用不完）、有PC客户端、支持自定义域名CDN加速和https访问、支持私有仓库静态网站、支持Hexo图床、可以设置防盗链 ​ 缺点：自定义域名必须要备案、配置比较复杂、可能要付费、不支持WebHook 3. Android准备工作: ​ 前提：必须获取Root权限！！！否则无法进入hexo目录 ​ 命令行：这里推荐两个命令行工具: NeoTerm 和 Termux，各有特色，这里就不赘述了，有兴趣的可以都尝试一下 4. 安装Git、Node.js ​ Git： ​ 使用COS部署可以跳过Git的安装，但考虑到博客备份到Github较为方便，最好还是安装一下 ​ 在命令行/终端中输入git —version来查看是否安装了Git ​ 在Git官网下载对应系统的最新Git版本并安装：下载地址 ​ （Windows安装后可以使用GitBash或者PowerShell来执行git命令） ​ 安装后重启终端/命令行生效 ​ Android在终端中输入pkg install git安装Git ​ Node.js： ​ 官网下载总是最好的方式：下载地址 根据你的系统自行选择 ​ 使用node -v和npm -v查看是否安装了Node.js和npm ​ Android在终端输入pkg install nodejs安装Node.js ​ Linux下安装方式： ​ ⁃ 使用apt-get命令安装nodejs（推荐） 12$ sudo apt-get install nodejs$ sudo apt-get install npm ​ ⁃ 服务器安装： ​ 使用wget命令下载 ​ 解压： 12$ xz -d node-vx.xx.x-linux-x64.tar.xz$ tar -xvf node-vx.xx.x-linux-x64.tar ​ 配置全局变量： 12$ ln -s /下载路径/node-vx.xx.x-linux-x64/bin/node /usr/local/bin/node$ ln -s /下载路径/node-vx.xx.x-linux-x64/bin/npm /usr/local/bin/npm 5. 切换npm淘宝源 ​ 如果使用梯子可以跳过本步骤 ​ npm国内访问很慢，可以通过切换为淘宝源来解决： 1$ npm config set registry https://registry.npm.taobao.org 1. 安装并配置Hexo1. 安装Hexo ​ 使用npm命令安装： 1$ npm install -g hexo-cli ​ 然后cd进入你想要创建博客的目录（Android最好不要执行这一步） ​ 初始化hexo 1$ hexo init 文件夹名 ​ 执行后会在刚才的目录下创建一个文件夹，文件夹名最好不要带特殊符号和中文 ​ 进入文件夹会看见里面有这几个文件/文件夹： ​ node_modules: 依赖包​ public：生成的页面​ scaffolds：生成文章的一些模板​ source：用来存放你的文章、图片等资源​ themes：主题​ _config.yml: 配置文件 ​ 生成博客页面： 12$ hexo g //生成博客文件$ hexo s //在本地服务器运行博客 ​ 默认端口为4000，如果提示被占用可以通过hexo s -p 端口号来指定端口 ​ 打开浏览器输入http://localhost:4000/即可访问 ​ 打开后网页大概是这样： ​ 关于更多hexo命令可以查询官方文档：hexo命令 2. 配置Hexo ​ 打开博客目录下_config.yml ​ 可以根据官方文档进行修改配置：hexo配置 ​ 在本步骤中只需要修改网站和网址配置参数 ​ 注意.yml文件严格遵守YAML语法 ​ 1.冒号后面必须有一个空格 ​ 2.使用缩进表示层级关系（两个空格，不支持Tab） ​ 3.同一层级的元素必须对齐 ​ 4.#表示注释，可以使用多个如：### ​ 5.如属性值为字符串，若不含特殊符号则可以省略单引号’ ​ 推荐使用编辑器：Atom（macOS用户也可以使用Xcode） 2. 配置Git和SSH​ 在Github/Gitee/Coding上部署博客需要配置Git全局变量和SSH秘钥 ​ 配置git全局变量 12$ git config --global user.name &quot;用户名&quot; //注册的用户名$ git config --global user.email &quot;邮箱&quot; //注册的邮箱 ​ *Android的Termux没有自带的SSH命令，需要先安装OpenSSH 1$ apt install openssh ​ 生成SSH秘钥 12$ cd ~/.ssh$ ssh-keygen -t rsa -C “邮箱” //注册的邮箱(中间会让你输密码，一般不需要，直接回车跳过就好) ​ 输出的代码中会有保存路径，进入路径看到以下三个文件 ​ 其中，id_rsa是这台设备的私人秘钥，id_rsa.pub是公共秘钥，我们只需要公共秘钥 ​ 用文本编辑器（或者随便什么编辑器都可以）打开id_rsa.pub复制里面所有内容 ​ 在Git仓库上添加SSH秘钥： ​ Github：点击右上角头像 → Settings → SSH and GPG keys → New SSH key ​ 填写完毕后点击Add SSH key添加即可 ​ 命令行中输入ssh -T git@github.com查看是否成功 ​ Gitee：点击右上角头像 → 设置 → SSH公钥 ​ 填写完毕后点击确定即可 ​ 命令行中输入ssh -T git@gitee.com查看是否成功 ​ Coding：点击右上角头像 → 个人设置 → SSH公钥 → 新增公钥 ​ 可以设置有效期，一般设置永久有效 ​ 点击添加 ​ 命令行中输入ssh -T git@dev.tencent.com查看是否成功 3. 部署Hexo​ 使用Git仓库： ​ 安装hexo-deployer-git插件到博客文件夹 1$ npm install hexo-deployer-git --save //使用--save安装依赖到本文件夹，会记录到package.json中的dependencies内 ​ 使用COS对象存储： ​ 安装hexo-deployer-cos插件到博客文件夹 1$ npm install hexo-deployer-cos --save //使用--save安装依赖到本文件夹，会记录到package.json中的dependencies内 3.1 部署Hexo至Github​ 创建Github仓库：点击右上角加号+ → New repository ​ Repository name必须填写用户名.github.io，并选择公共仓库 ​ 点击Create repository ​ 然后复制仓库的SSH链接（注意一定要选择Use SSH） ​ 打开配置文件_config.yml定位到deploy属性 ​ 修改仓库地址和分支地址 1234deploy: type: git repo: git@github.com:RyTinSelver/RyTinSelver.github.io.git //刚刚复制的地址 branch: master //注意如果Master分支使用Cloud Studio存放hexo源码的话，请将这里的branch改成新的分支名 ​ 将Hexo发布至Github仓库 1$ hexo d ​ 在github仓库中选择Settings，找到Github Pages选项并打开 ​ 支持自定义域名（在域名注册商那里设置DNS解析，新建CNAME记录地址用户名.github.io） ​ 自定义域名会在静态网站中生成CNAME文件，但是每次上传都会被删掉，解决方法是将CNAME文件下载到本地，复制到/博客文件夹/source/中即可 ​ 更改分支为静态网站文件所在的分支，可以打开Enforce HTTPS开启https访问 ​ 等待五分钟左右，打开网站查看是否成功部署 3.2 部署Hexo到Gitee​ 创建Gitee仓库：点击右上角加号+ → 新建仓库 ​ 仓库名称必须填用户名，可以选择私人仓库或者公共仓库 ​ 点击创建 ​ 然后复制仓库的SSH链接（注意一定要选择SSH） ​ 打开配置文件_config.yml定位到deploy属性 ​ 修改仓库地址和分支地址 1234deploy: type: git repo: git@gitee.com:RyTinSelver/RyTinSelver.git //刚刚复制的地址 branch: master //注意如果Master分支使用Cloud Studio存放hexo源码的话，请将这里的branch改成新的分支名 ​ 将Hexo发布至Gitee仓库 1$ hexo d ​ 在gitee仓库中选择服务 → Gitee Pages ​ 选择部署分支，点击启动 ​ 更改分支为静态网站文件所在的分支 ​ 若要自定义域名需要购买Gitee Pages Pro，且域名必须备案（在域名注册商那里设置DNS解析，新建CNAME记录地址用户名.gitee.io） ​ 自定义域名https访问： ​ 点击配置域名证书 → 申请免费HTTPS证书 ​ 申请成功后勾选强制使用HTTPS ​ 等待五分钟左右，打开网站查看是否成功部署 3.3 部署Hexo到Coding（dev.tencent）​ 创建Coding仓库：点击右上角加号+ → 项目 ​ 项目地址必须填用户名.coding.me，项目名称可以随意，选择Git仓库 ​ 点击新建项目 ​ 然后进入项目 → 代码 → 代码浏览 ​ 复制SSH链接（左边下拉框选择SSH） ​ 打开配置文件_config.yml定位到deploy属性 ​ 修改仓库地址和分支地址 1234deploy: type: git repo: git@git.dev.tencent.com:RyTinSelver/RyTinSelver.coding.me.git //刚刚复制的地址 branch: master //注意如果Master分支使用Cloud Studio存放hexo源码的话，请将这里的branch改成新的分支名 ​ 将Hexo发布至Coding项目 1$ hexo d ​ 在coding项目中选择代码 → Pages 服务 ​ 选择一键开启Coding Pages ​ 部署成功后可以点击右上角设置图标进行自定义设置 ​ 更改分支为静态网站文件所在的分支 ​ 若要自定义域名请填写绑定新域名（在域名注册商那里设置DNS解析，新建CNAME记录地址用户名.coding.me） ​ 自定义域名https访问： ​ Coding自带SSL证书申请，证书时长3个月 ​ *注意申请SSL证书前请暂时关闭除了Coding以外的所有解析记录，否则会申请失败 ​ 申请成功后勾选强制使用HTTPS ​ 等待五分钟左右，打开网站查看是否成功部署 3.4 部署Hexo至腾讯云COS​ 创建储存桶 ​ 名称随意，地域自己看着选，选择私有读或者公有读私有写 ​ 点击秘钥管理，前往云API秘钥管理 ​ 点击新建秘钥（如果已经有了就不需要新建） ​ 复制APPID、SecretId、SecretKey ​ 打开配置文件_config.yml定位到deploy属性 ​ 修改配置为 1234567deploy: type: cos appId: 刚才复制的APPID secretId: 刚才复制的SecretId secretKey: 刚才复制的SecretKey bucket: blog-rytinselver-1258502213 //储存桶名字，带上后面的数字 region: ap-shanghai //所属地域 ​ 将Hexo发布至COS储存桶 1$ hexo d ​ 在储存桶基础配置里打开静态网站 ​ 在域名管理中设置自定义加速域名，源站类型选择静态网站源站，如果储存桶为私有读则需开启回源鉴权并添加CDN服务授权，域名一定要备案 ​ CDN设置中打开高级配置 ​ 配置SSL证书，可以在腾讯云申请有效期一年的免费证书 ​ 配置成功后打开强制跳转HTTPS和HTTPS2.0 ​ 可以打开带宽封顶来避免网站被流量攻击 ​ 回源配置中关闭Range回源和301/302跟随 ​ 可以在访问控制中打开IP访问限频，防御部分CC攻击 ​ 等待五分钟左右，打开网站查看是否成功部署 4. 修改Hexo主题​ 在官网下载好看的主题：主题下载 ​ 然后通过git clone命令将主题克隆到/博客文件夹/themes/主题名目录下 ​ 最后修改_config.yml中的theme属性为主题名 123$ hexo clean //清空public文件夹$ hexo g$ hexo d ​ 你还可以根据主题的说明更改主题配置/主题名/_config.yml 5. 发布文章​ 新建文章 1$ hexo new &quot;文章名&quot; ​ 用Markdown编辑器打开/source/_posts/文章名.md即可开始编辑文章 ​ 这里推荐Typora：官网 ⁃⁃⁃title: 中文测试category: Testingtags: Testingdate: 2019-01-16 17:45:29⁃⁃⁃ ​ 这一段是头信息，category表示分类，tags是标签，可以用数组的形式添加多个标签 ​ 新建草稿 1$ hexo new draft &quot;文章名&quot; ​ 预览草稿 1$ hexo server --draft ​ 发布草稿 1$ hexo publish draft &quot;文章名&quot; ​ *草稿发布后即正常可见 6. 添加新页面1$ hexo new page 页面名 ​ 这样会在source文件夹下新建一个页面名文件夹 ​ 你可以在主题中将它加入sidebar或navbar 结束语​ 本教程到此为止基本结束了，嗯 ​ 关于博客的优化，进阶配置，个性化，主题开发等以后有空了也会写 ​ 如果本教程中有错误的地方还请大家指正，如有疑惑欢迎在下方评论，我会经常看的]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Instructions</tag>
        <tag>Hexo</tag>
        <tag>Github</tag>
        <tag>COS</tag>
        <tag>Coding</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[中文测试]]></title>
    <url>%2FTesting%2F21129.html</url>
    <content type="text"><![CDATA[《九月初九》木心 中国的“人”和中国的“自然”，从《诗经》起，历楚汉辞赋唐宋诗词，连绾表现着平等参透的关系，乐其乐亦宣泄于自然，忧其忧亦投诉于自然。在所谓“三百篇”中，几乎都要先称植物动物之名义，才能开诚咏言；说是有内在的联系，更多的是不相干地相干着。学士们只会用“比”、“兴”来囫囵解释，不问问何以中国人就这样不涉卉木虫鸟之类就启不了口作不成诗，楚辞又是统体苍翠馥郁，作者似乎是巢居穴处的，穿的也自愿不是纺织品，汉赋好大喜功，把金、木、水、火边旁的字罗列殆尽，再加上禽兽鳞介的谱系，仿佛是在对“自然”说：“知尔甚深。”到唐代，花溅泪鸟惊心，“人”和“自然”相看两不厌，举杯邀明月，非到蜡炬成灰不可，已岂是“拟人”、“移情”、“咏物”这些说法所能敷衍。宋词是唐诗的“兴尽悲来”，对待“自然”的心态转入颓废，梳剔精致，吐属尖新，尽管吹气若兰，脉息终于微弱了，接下来大概有鉴于“人”与“自然”之间的绝妙好辞已被用竭，懊恼之余，便将花木禽兽幻作妖化了仙，烟魅粉灵，直接与人通款曲共枕席，恩怨悉如世情——中国的“自然”宠幸中国的“人”，中国的“人”阿谀中国的“自然”？孰先孰后？孰主孰宾？从来就分不清说不明。 儒家既述亦作，述作的竟是一套“君王术”；有所说时尽由自己说，说不了时一下子拂袖推诿给“自然”，因此多的是峨冠博带的耿介懦夫。格致学派在名理知行上辛苦凑合理想主义和功利主义，纠缠瓜葛把“自然”架空在实用主义中去，收效却虚浮得自己也感到失望。释家凌驾于“自然”之上，“自然”只不过是佛的舞台，以及诸般道具，是故释家的观照“自然”远景终究有限，始于慈悲为本而止于无边的傲慢——粗粗比较，数道家最乖觉，能脱略，近乎“自然”；中国古代艺术家每有道家气息，或一度是道家的追慕者、旁观者。道家大宗师则本来就是哀伤到了绝望、散逸到了玩世不恭的曝日野叟，使艺术家感到还可共一夕谈，一夕之后，走了。（也走不到哪里去，都只在悲观主义与快乐主义的峰回路转处，来来往往，讲究姿态，仍不免与道家作莫逆的顾盼）然而多谢艺术家终于没有成为哲学家，否则真是太萧条了。 “自然”对于“人”在理论上、观念上若有误解曲解，都毫不在乎。野果成全了果园，大河肥沃了大地，牛羊入栏，五粮丰登，然后群莺乱飞，而且幽阶一夜苔生——历史短促的国族，即使是由衷的欢哀，总嫌浮佻庸肤，毕竟没有经识过多少盛世凶年，多少钧天齐乐的庆典、薄海同悲的殇礼，尤其不是朝朝暮暮在无数细节上甘苦与共休戚相关，即使那里天有时地有利人也和合，而山川草木总嫌寡情乏灵，那里的人是人，自然是自然，彼此尚未涵融尚未钟毓……海外有春风、芳草，深宵的犬吠，秋的丹枫，随之绵衍到煎鱼的油香，邻家婴儿的夜啼，广式苏式月饼。大家都自言自语：不是这样，不是这样的。心里的感喟：那些都是错了似的。因为不能说“错了的春风，错了的芳草”，所以只能说不尽然、不完全……异邦的春风旁若无人地吹，芳草漫不经心地绿，猎犬未知何故地吠，枫叶大事挥霍地红，煎鱼的油一片汪洋，邻家的婴啼似同隔世，月饼的馅儿是百科全书派……就是不符，不符心坎里的古华夏今中国的观念、概念、私心杂念……乡愁，去国之离忧，是这样悄然中来、氤氲不散。 中国的“自然”与中国的“人”，合成一套无处不在的精神密码，欧美的智者也认同其中确有源远流长的奥秘；中国的“人”内充满“自然”，这个观点已经被理论化了，好事家打从“烹饪术”上作出不少印证，有识之士则着眼于医道药理、文艺武功、易卜星相、五行堪舆……然而那套密码始终半解不解。因为，也许更有另一面：中国的“自然”内有“人”——谁莳的花服谁，那人卜居的丘壑有那人的风神，犹如衣裳具备袭者的性情，旧的空鞋都有脚……古老的国族，街头巷尾亭角桥堍，无不可见一闪一烁的人文剧情、名城宿迹，更是重重叠叠的往事尘梦，郁积得憋不过来了，幸亏总有春花秋月等闲度地在那里抚恤纾解，透一口气，透一口气，这已是历史的喘息。稍多一些智能的人，随时随地从此种一闪一烁重重叠叠的意象中，看到古老国族的辉煌而褴褛的整体，而且头尾分明。古老的国族因此多诗、多谣、多脏话、多轶事、多奇谈、多机警的诅咒、多伤心的俏皮绝句。茶、烟、酒的消耗量与日俱增……唯有那里的“自然”清明而殷勤，亘古如斯地眷顾着那里的“人”。大动乱的年代，颓壁断垣间桃花盛开，雨后的刑场上蒲公英星星点点，瓦砾堆边松菌竹笋依然……总有两三行人为之驻足，为之思量。而且，每次浩劫初歇，家家户户忙于栽花种草，休沐盘桓于绿水青山之间——可见当时的纷争都是荒诞的，而桃花、蒲公英、松菌、竹笋的主见是对的。 另外（难免有一些另外），中国人既温暾又酷烈，有不可思议的耐性，能与任何祸福作无尽之周旋。在心上，不在话下，十年如此，百年不过是十个十年，忽然已是千年了。苦闷逼使“人”有所象征，因而与“自然”作无止境的亲，乃至熟昵而狡黠作狎了。至少可先例两则谐趣：金鱼、菊花。自然中只有鲋、鲫，不知花了多少代人的宝贵而不值钱的光阴，培育出婀娜多姿的水中仙侣，化畸形病态为固定遗传，金鱼的品种叹为观止而源源不止。野菊是很单调的，也被嫁接、控制、盆栽而笼络，作纷繁的形色幻变。菊花展览会是菊的时装表演，尤其是想入非非的题名，巧妙得可耻——金鱼和菊花，是人的意志取代了自然的意志，是人对自然行使了催眠术。中庸而趋极的中国人的耐性和猾癖一至于此。亟待更新的事物却千年不易，不劳费心的行当干了一件又一桩，苦闷的象征从未制胜苦闷之由来，叫人看不下去地看下，看下去。“自然”在金鱼、菊花这类小节上任人摆布，在阡陌交错的大节上，如果用“白发三千丈”的作诗方法来对待庄稼，就注定以颗粒无收告终，否则就不成其为“自然”了。 从长历史的中国来到短历史的美国，各自心中怀有一部离骚经，“文化乡愁”版本不一，因人而异，老辈的是木版本，注释条目多得几乎超过正文，中年的是修订本，参考书一览表上洋文林林总总，新潮后生的是翻译本，且是译笔极差的节译本。更有些单单为家乡土产而相思成疾者，那是简略的看图识字的通俗本——这广义的文化乡愁，便是海外华裔人手一册的离骚经，性质上是“人”和“自然”的骈俪文。然而日本人之对樱花、俄罗斯人之对白桦、印度人之对菩提树、墨西哥人之对仙人掌，也像中国人之对梅、兰、竹、菊那样的发呆发狂吗——似乎并非如此，但愿亦复如此则彼此可以谈谈，虽然各谈各的自己。从前一直有人认为痴心者见悦于痴心者，以后会有人认知痴心者见悦于明哲者，明哲，是痴心已去的意思，这种失却是被褫夺的被割绝的，痴心与生俱来，明哲当然是后天的事。明哲仅仅是亮度较高的忧郁。 中国的瓜果、蔬菜、鱼虾……无不有品性，有韵味，有格调，无不非常之鲜，天赋的清鲜。鲜是味之神，营养之圣，似乎已入灵智范畴。而中国的山山水水花花草草之所以令人心醉神驰，说过了再重复一遍也不致聒耳，那是真在于自然的钟灵毓秀，这个俄而形上俄而形下的谛旨，姑妄作一点即兴漫喻。譬如说树，砍伐者近来，它就害怕，天时佳美，它枝枝叶叶舒畅愉悦，气候突然反常，它会感冒，也许正在发烧，而且咳嗽……凡是称颂它的人用手抚摩枝干，它也微笑，它喜欢优雅的音乐，它所尤其敬爱的那个人殁了，它就枯槁折倒。池水、井水、盆花、圃花、犬、马、鱼、鸟都会恋人，与人共幸蹇，或盈或涸，或茂或凋，或憔悴绝食以殉。当然不是每一花每一犬都会爱你，道理正如不是每个人都会爱你那样–如果说兹事体小，那么体大如崇岳、莽原、广川、密林、大江、巨泊，正因为在汗漫历史中与人曲折离奇地同褒贬共荣辱，故而瑞征、凶兆、祥云、戾气、兴绪、衰象，无不似隐实显，普遍感知。粉饰出来的太平，自然并不认同，深讳不露的歹毒，自然每作昭彰，就是这么一回事，就是这么两回事。中国每一期王朝的递嬗，都会发生莫名其妙的童谣，事后才知是自然借孩儿的歌喉作了预言。所以为先天下之忧而忧而乐了，为后天下之乐而乐而忧了；试想“先天下之忧而忧”大有人在，怎能不跫然心喜呢，就怕“后天下之乐而乐”一直后下去，诚不知后之览者将如何有感于斯文——这些，也都是中国的山川草木作育出来的，迂阔而挚烈的一介乡愿之情。没有离开中国时，未必不知道——离开了，一天天地久了，就更知道了。]]></content>
      <categories>
        <category>Testing</category>
      </categories>
      <tags>
        <tag>Testing</tag>
        <tag>Chinese</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Encryption Test]]></title>
    <url>%2FTesting%2F2034.html</url>
    <content type="text"><![CDATA[密码是12345 Incorrect Password! No content to display! U2FsdGVkX1+UMGfjSCsmdkUoXjK+HhFwG+g+2uQqAL0FbSgelkpSqc3lo2PB35xGIkqteRghnJPNwljWp8b8PkWjwawGP7xhixCLIVdq6j0E+kIhlzRPQ31YdQs9PEQOshgnD1tlvA9I56H/pOFU145JZlRn7PCNgylh1Kbe7zL8W/kdcDFKR55yzNSOWWt7zcMsuUuHC1LZDkJoUvqugMn08SEylvZ27lPCRt+sAnlTurVmmQm9kZ/PDFEcxs5iNGTyT7fEmf9oFRkCDaa9jRufvbXx6FRN/uJuKgMD7MM5W5JFZ3cXjLFYdXriXpheJ/y8Pgd0s52xliODqptOA1+4R1wyGvYcqQBRvMlSt5EzaQ+7MvM5/fTKWohyJF1QGoDyuHURA9VMD8BevsxVX1D2fROXMQaAxoUXKul3mu8EVnm4r6MOw+JkU/giS2yVCrYke0iPrVd41VALXWkbs4ttYga3Y+aSMMG9kYm4O9APvmezmRDGDHVozE48rwNGc11GdT54KaF0z+uE7Ck1q9H1xm1ldr5NRS0sLhkrR4ByWejewh0zC53j+0lwLrTx6Fs6Rpf06upRMi8zmBRd6o64chj+D3USqr4eluS9taeW84khBdDNrfrYMourZ/lzgdseMTvWOXt72WrtP8J1xqtJkupnKWXEab3sNS5TQ+YEpIDL9kgirgipBsOQhjYmiqOZSa9VIf02auTl3sMqirHyL7IsAjCaO9nKenSc56mCxjJuiYgjLTVwWJD6FcWA3E4M/zw5dd8FX6bfIzIWdq3B6T/EFMkmnsNl4bUkTZDbsECMasyzHidN0aPcjljxyt6OttA5FVsPuPilgainH3PdoL4+olut7UtB9mfHGKl4bxcn/A665JNDYKK0Vx+9zWUC7T4LeN6rM9p+MbNbrlss0Yo4cSWMEhKdq0u+yYSlZC4IklOYy3+R+lpzX5qoLJ29DH1yhhXGgZKHb6gWy+CaKUdZIs95JW2S0VxW6oBIGEXxpxmWgEpwFptl21+UuHH6XngSmnDBrtjPymlXou3oYIdo+348YCrqEQ1qMdY4nBgxqL0BhjJIODrHcLKeCQW8xzEdZLhpNYXvKdar0ZBYeOj/nljXU4cL3UkOfNCwU+PR1pl2YdJvIedtzMw9qYx6XsbkUIZgKer+Ih5atiE3XbYTufj+Q2r0+5/FitxnxSnEjYn87/YxLoNkVq7vGgk2QnChS5hZMEG+hRONudtuA/JdWGJLnHZpLB4JJ8wGYEkpHmwoLlWgvdS9u46jngZexwuX244vn/uSLeu7V7yFMM+6p/8ZT0q4GCJI3O1G/GknqDMc5WmKcdBfkHHNu/AotmturEqsjKorwwtgYKwooR2MCG0i+fxfBvU6AxDDjjDBALTJP/gN1n6SYguN6XBWHB2sXm6ZmhDax7AifB4Coc8aFbzTiwEPllXHkMWVF4HQAcqa07fvD+8Rkx6OeFwSxAWjCVKoH1ssTg0ePbBUCYeTXrsFU3aKw1aB/U4A6tfj61x+QACkMwKop1BgG7C1sz6xizEtnEej7/+FMX2JPWx++GhAQTlGcaVpNIju/3cmAFIhzKlyn9M80/VUPaQVZe500qt5k94MM29mQNvk3yUnsrhV2GGZPZtUh5j3yVhTqI2aMp3m2c71tBHvYFnqpEoA5+eRGEDSu5OqgfK1XFqJilk8o/bf4EIBD5W7Ns+RP07krZz38mpUivm3PBr4R56F7QUIfxKkQPXxSDUCK7AbAQC4S1hF+FWh13OBOVO6h4YD6zivZdKbFkpdYa34CVtR9XsN4bOhD2THVeS3YjE/utlkY0e06OeIKNPl1KOXXo5/cnKtHbl9LOGREQRjP4C6YZqM2ZfpgEYevw==]]></content>
      <categories>
        <category>Testing</category>
      </categories>
      <tags>
        <tag>Encrypt</tag>
        <tag>Testing</tag>
      </tags>
  </entry>
</search>
